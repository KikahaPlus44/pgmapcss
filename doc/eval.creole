== Data Types ==
In fact all values are internally stored as strings, but are converted to data types as needed. Therefore, when a data type is required below, this is just a reference.

|= Data Type |= Description |= Example
| //value// | An unspecified value |
| //none// | An empty string or (postgresql) NULL value. If a calculations fails (e.g. 2//0), the result is //none//. |
| //string// | Any text; may be enclosed in quotes ("..." or '...'). (//none// is an empty string). | "foobar", 'foobar', foobar
| //key// | A string which is used as key of tag or a property. | name:en
| //number// | A chain of digits, may contain a '.' as decimal point. (//none// is treated as 0). May be suffixed by a unit name (see below). | 2.5, 5px, 30m
| //boolean// | true or false. If expression equals 0, "no", "false" or //none// the value is considerd false, true otherwise. If a function returns a boolean value, "true" or "false" is returned.
| //list// | A list of values, separated by ';' | 'atm;bank'.
| //geometry// | A (e)WKB representation of a geometry as used by PostGIS

== Units ==
If you read a number, unit conversion takes place. The following units are supported:
|= Unit |= Description
| px | Pixel on the screen (default)
| u | Units in 900913 projection
| m | Meters on the ground (TODO: currently equals 'u').

== Operators ==
|= Operator |= Description
| +, -, *, / | arithmetic operations
| ==, !=, <> | string comparison (equal, not equal, not equal)
| >, >=, <=, < | number comparison
| , or ; | several statements separated by , or ; will always return the value of the last statement.
| ~= | list membership; whether list contains an element.

== Functions ==
|= Function |= Parameters |= Return value |= Description
| add, sub, mul, div | number, [number, [number, ...]] | number | arithmetic operations. If any of the input parameters is not a number, returns none.
| eq, neq | text, [text, [text, ...]] | boolean | eq: Returns true if all input parameters are equal; neq: Returns true if all of the input parameters are different.
| gt, ge, le, lt | number, number | boolean | compares two numbers. >, >=, <= or <.
| sqrt | number | number | Square root of input value
| prop | key, [string] | value | current value of the computed property on pseudo element param2 (default: current pseudo element). Examples: prop(width), prop(width, casing)
| tag | key, [key, [key, ...]] | value | value of the tag key (e.g. tag("name") ). If several keys are passed, the first set tag is returned, e.g. tag("name:en", "int_name", "name").
| concat | string, [string, [string, ...]] | string | Concatenate all strings
| any | value, [value, [value, ...]] | value | Returns first value that's not //none//.
| min | number, [number, [number, ...]] | number | Returns lowest of the input values.
| max | number, [number, [number, ...]] | number | Returns highest of the input values.
| boolean | value | boolean | Converts the input to "true" or "false" (see 'Data Types' for an explanation).
| cond | boolean, value, [value] | value | if first input parameter is //boolean// true return the second parameter, otherwise the third parameter (or "").
| number | value, [string] | number | Converts the input to a number (or "") of the specified unit (parameter 2, default 'px'). E.g. number('2px') => '2' or number('100px', 'm') => '238.86' (at zoom level 16).
| debug | value | value | raise a postgresql notice with the value; returns value. E.g. width: eval(debug(5+4));

=== List functions ===
|= Function |= Parameters |= Return value |= Description
| list | value, [value, [value, ...]] | list | Returns a list from all input values. E.g. list("Alice", "Bob") -> "Alice;Bob"
| get | list, number | value | Returns the n-th element of the list (counting starts at 0)
| set | list, number, value | list | Sets the n-th element of the list to value
| push | list, value | list | Appends value to list
| split | string, string | list | Split the 1st string at occurences of the separator string (2nd string), e.g. split("Alice and Bob", " ") -> "Alice;and;Bob"
| join | list, string | string | Join the list by the string, e.g. join("Alice;Bob", " and ") -> "Alice and Bob"
| count | list | number | Returns count of elements in the list
| contains | list, value | boolean | Check if list contains value.
| search | list, value | number/boolean | Returns (first) index of value in list or 'false' if not found.

== Geometric functions ===
|= Function |= Parameters |= Return value |= Description
| buffer | geometry, number | geometry | Draws a buffer of the specified size (default: pixels) around the input geometry, e.g. buffer(prop(geo), 100m)
