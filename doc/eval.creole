== Data Types ==
In fact all values are internally stored as strings, but are converted to data types as needed. Therefore, when a data type is required below, this is just a reference.

|= Data Type |= Description |= Example
| //value// | An unspecified value |
| //none// | An empty string or (postgresql) NULL value. If a calculations fails (e.g. 2//0), the result is //none//. |
| //string// | Any text; may be enclosed in quotes ("..." or '...'). (//none// is an empty string). | "foobar", 'foobar', foobar
| //key// | A string which is used as key of tag or a property. | name:en
| //number// | A chain of digits, may contain a '.' as decimal point. (//none// is treated as 0). May be suffixed by a unit name (see below). | 2.5, 5px, 30m
| //int//, //float// | A number without unit | 2 resp. 2.5
| //boolean// | true or false. If expression equals 0, "no", "false" or //none// the value is considerd false, true otherwise. If a function returns a boolean value, "true" or "false" is returned.
| //list// | A list of values, separated by ';' | 'atm;bank'.
| //geometry// | A (e)WKB representation of a geometry as used by PostGIS

== Units ==
If you read a number, unit conversion takes place. The following units are supported:
|= Unit |= Description
| px | Pixel on the screen (default)
| u | Units in 900913 projection
| m | Meters on the ground (TODO: currently equals 'u').

== Operators ==
|= Operator |= Description |= Compatibility
| +, -, *, / | arithmetic operations (see add, sub, mul, div for description) | MapCSS 0.2
| . | concatenate strings (strings need to be quoted though) | MapCSS 0.2
| ==, !=, <> | string comparison (equal, not equal, not equal) | TODO: MapCSS 0.2: number comparison
| >, >=, <=, < | number comparison | MapCSS 0.2
| , or ; | several statements separated by , or ; will always return the value of the last statement.
| ~= | list membership; whether list contains an element. | no standard

== Functions ==
|= Function |= Parameters |= Return value |= Description | Compatibility
| add, sub, mul, div | number, [number, [number, ...]] | number | arithmetic operations. If any of the input parameters is not a number, returns //none//, with the exception of //none//, which will be converted to 0. | no standard
| eq, neq | text, [text, [text, ...]] | boolean | eq: Returns true if all input parameters are equal; neq: Returns true if all of the input parameters are different. | no standard
| gt, ge, le, lt | number, number | boolean | compares two numbers. >, >=, <= or <. | no standard
| sqrt | number | number | Square root of input value | MapCSS 0.2
| prop | key, [string] | value | current value of the computed property on pseudo element param2 (default: current pseudo element). Examples: prop(width), prop(width, casing) | MapCSS 0.2 (no standard: pseudo element)
| tag | key, [key, [key, ...]] | value | value of the tag key (e.g. tag("name") ). If several keys are passed, the first set tag is returned, e.g. tag("name:en", "int_name", "name"). | MapCSS 0.2 (only one key)
| parent_tag | key, [key, [key, ...]] | value | value of the tag key (e.g. parent_tag("name") ) of the parent element in the link selector. If several keys are passed, the first set tag is returned, e.g. parent_tag("name:en", "int_name", "name"). | no standard
| parent_geo | | geometry | Return the geometry of the current parent object. | no standard
| link_tag | key, [key, [key, ...]] | value | Depending on the type of the link, a couple of tags are automatically set, e.g. 'index', 'distance'. See [[MapCSS.creole]] for details. | no standard
| concat | string, [string, [string, ...]] | string | Concatenate all strings | no standard
| any | value, [value, [value, ...]] | value | Returns first value that's not //none//. | MapCSS 0.2
| min | number, [number, [number, ...]] | number | Returns lowest of the input values. | MapCSS 0.2
| max | number, [number, [number, ...]] | number | Returns highest of the input values. | MapCSS 0.2
| boolean | value | boolean | Converts the input to "true" or "false" (see 'Data Types' for an explanation). | MapCSS 0.2
| cond | boolean, value, [value] | value | if first input parameter is //boolean// true return the second parameter, otherwise the third parameter (or ""). | MapCSS 0.2
| metric | value | number | Converts the input to pixels (or ""). E.g. number('3m') => '1.5' when the scale is '2 meters in 1 pixel'. | MapCSS 0.2
| metric | value, [string] | number | Converts the input to a number (or "") of the specified unit (parameter 2, default 'px'). E.g. number('2px') => '2' or number('100px', 'm') => '238.86' (at zoom level 16). | no standard
| zmetric | value | number | Currently not supported, returns '' |
| str | value | string | "Converts" input value to string. As every input is a string, does nothing. | MapCSS 0.2
| int | value | number | Returns the integer part of the input (e.g. '-5.6' => '-5', '8.9' => '8'). Does not accept units.
| num | value | number | Checks if the input is a number. If not, none is returned. | MapCSS 0.2
| round | v number, [s int] | Round the input value v to s decimal places (or 0). E.g. round(-50.6, 1) => -51 | no standard
| debug | value | value | raise a postgresql notice with the value; returns value. E.g. width: eval(debug(5+4)); | no standard

=== List functions ===
* List functions are not part of the MapCSS 0.2 standard

|= Function |= Parameters |= Return value |= Description
| list | value, [value, [value, ...]] | list | Returns a list from all input values. E.g. list("Alice", "Bob") -> "Alice;Bob"
| get | list, int | value | Returns the n-th element of the list (counting starts at 0)
| set | list, int , value | list | Sets the n-th element of the list to value
| push | list, value | list | Appends value to list
| split | string, string | list | Split the 1st string at occurences of the separator string (2nd string), e.g. split("Alice and Bob", " ") -> "Alice;and;Bob"
| join | list, string | string | Join the list by the string, e.g. join("Alice;Bob", " and ") -> "Alice and Bob"
| count | list | number | Returns count of elements in the list
| contains | list, value | boolean | Check if list contains value.
| search | list, value | number/boolean | Returns (first) index of value in list or 'false' if not found.
| unique | list | list | Removes duplicate values from a list.
| sort | list | list | Orders list alphabetically ascending.
| natsort | list | list | Orders list by a 'natural' sort order.
| min | list | number | Returns lowest of the input values.
| max | list | number | Returns highest of the input values.

== Geometric functions ===
* Geometric functions are not part of the MapCSS 0.2 standard
* All lengths are accepted / returned as pixels on screen. You may specify a different unit, e.g. line_part(prop(geo), 5m, -5m)

|= Function |= Parameters |= Return value |= Description
| line_length | geometry | number | Returns the length of a line.
| buffer | geometry, number | geometry | Draws a buffer of the specified size (default: pixels) around the input geometry, e.g. buffer(prop(geo), 100m); if no or invalid number is specified the input geometry is returned.
| line_merge | geometry | geometry | Merges collected line strings; polygons and other geometries will get lost.
| convex_hull | geometry | geometry | Create a convex hull from the input geometry: http://postgis.net/docs/ST_ConvexHull.html
| line_locate_point | geometry, geometry | geometry | Returns a number between 0 and the length of the line representing the location of the closest point on a line (1st geometry) to the given point (2nd geometry).
| line_interpolate_point | geometry, number | geometry | Returns a point interpolated along a line. 2nd argument is a number between 0 and the length of the line (1st argument).
| line_part | geometry, number[, number] | geometry | Return a linestring being a substring of the input line starting and ending at the given fractions of total length. 2nd argument ist start location, 3rd argument is end location between 0..length of line. If negative arguments are used the location is calculated from the end. If the 3rd argument is omitted the end of the line is assumed.
| line | geometry, geometry, [geometry, ...] | geometry | Return a line of all input geometries (points).
| line | list | geometry | Return a line of all input geometries (points).
| azimuth | geometry, geometry | number | Returns the north-based azimuth as the angle in degrees measured clockwise from the vertical on point1 to point2 (see http://postgis.net/docs/ST_Azimuth.html)
| translate | geometry, X number, Y number | geometry | Translates the geometry to a new location using the numeric parameters as offsets (default px).
| rotate | geometry, angle number, [center geometry] | geometry | Rotates the geometry around the center geometry (or the centroid of the input geometry) by angle degrees.
