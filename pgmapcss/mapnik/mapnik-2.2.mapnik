<?xml version="1.0"?>
<!DOCTYPE Map>
<Map srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over" background-color="{canvas|fill-color}" background-image="{canvas|fill-image}" buffer-size="{canvas|buffer}">
  <!-- DejaVu Sans -->
  <FontSet name="DejaVu Sans - normal - normal">
    <Font face-name="DejaVu Sans Book" />
    <Font face-name="unifont Medium" />
  </FontSet>
  <FontSet name="DejaVu Sans - bold - normal">
    <Font face-name="DejaVu Sans Bold" />
    <Font face-name="unifont Medium" />
  </FontSet>
  <FontSet name="DejaVu Sans - normal - italic">
    <Font face-name="DejaVu Sans Oblique" />
    <Font face-name="unifont Medium" />
  </FontSet>
  <FontSet name="DejaVu Sans - bold - italic">
    <Font face-name="DejaVu Sans Bold Oblique" />
    <Font face-name="unifont Medium" />
  </FontSet>

  <!-- DejaVu Sans Condensed -->
  <FontSet name="DejaVu Sans Condensed - normal - normal">
    <Font face-name="DejaVu Sans Condensed" />
    <Font face-name="unifont Medium" />
  </FontSet>
  <FontSet name="DejaVu Sans Condensed - bold - normal">
    <Font face-name="DejaVu Sans Condensed Bold" />
    <Font face-name="unifont Medium" />
  </FontSet>
  <FontSet name="DejaVu Sans Condensed - normal - italic">
    <Font face-name="DejaVu Sans Condensed Oblique" />
    <Font face-name="unifont Medium" />
  </FontSet>
  <FontSet name="DejaVu Sans Condensed - bold - italic">
    <Font face-name="DejaVu Sans Condensed Bold Oblique" />
    <Font face-name="unifont Medium" />
  </FontSet>

  <!-- DejaVu Sans Mono -->
  <FontSet name="DejaVu Sans Mono - normal - normal">
    <Font face-name="DejaVu Sans Mono Book" />
    <Font face-name="unifont Medium" />
  </FontSet>
  <FontSet name="DejaVu Sans Mono - bold - normal">
    <Font face-name="DejaVu Sans Mono Bold" />
    <Font face-name="unifont Medium" />
  </FontSet>
  <FontSet name="DejaVu Sans Mono - normal - italic">
    <Font face-name="DejaVu Sans Mono Oblique" />
    <Font face-name="unifont Medium" />
  </FontSet>
  <FontSet name="DejaVu Sans Mono - bold - italic">
    <Font face-name="DejaVu Sans Mono Bold Oblique" />
    <Font face-name="unifont Medium" />
  </FontSet>

  <!-- DejaVu Serif -->
  <FontSet name="DejaVu Serif - normal - normal">
    <Font face-name="DejaVu Serif Book" />
    <Font face-name="unifont Medium" />
  </FontSet>
  <FontSet name="DejaVu Serif - bold - normal">
    <Font face-name="DejaVu Serif Bold" />
    <Font face-name="unifont Medium" />
  </FontSet>
  <FontSet name="DejaVu Serif - normal - italic">
    <Font face-name="DejaVu Serif Italic" />
    <Font face-name="unifont Medium" />
  </FontSet>
  <FontSet name="DejaVu Serif - bold - italic">
    <Font face-name="DejaVu Serif Bold Italic" />
    <Font face-name="unifont Medium" />
  </FontSet>

  <!-- DejaVu Serif Condensed -->
  <FontSet name="DejaVu Serif Condensed - normal - normal">
    <Font face-name="DejaVu Serif Condensed" />
    <Font face-name="unifont Medium" />
  </FontSet>
  <FontSet name="DejaVu Serif Condensed - bold - normal">
    <Font face-name="DejaVu Serif Condensed Bold" />
    <Font face-name="unifont Medium" />
  </FontSet>
  <FontSet name="DejaVu Serif Condensed - normal - italic">
    <Font face-name="DejaVu Serif Condensed Italic" />
    <Font face-name="unifont Medium" />
  </FontSet>
  <FontSet name="DejaVu Serif Condensed - bold - italic">
    <Font face-name="DejaVu Serif Condensed Bold Italic" />
    <Font face-name="unifont Medium" />
  </FontSet>

  <Style name="pgmapcss">
<!-- POLYGONS -->

# FOR fill-color fill-opacity
    <Rule>
      <Filter>[style-element] = 'fill' and '{fill-color} {fill-opacity}' = [fill-color fill-opacity]</Filter>
      <PolygonSymbolizer fill="{fill-color}" fill-opacity="{fill-opacity}" />
    </Rule>
# END

<!-- POLYGON PATTERN -->
    <Rule>
      <Filter>[style-element] = 'fill' and [fill-image]</Filter>
      <PolygonPatternSymbolizer file="[fill-image]" />
    </Rule>

<!-- CASING LINES -->
# FOR casing-color final-casing-width casing-offset casing-opacity casing-linejoin casing-linecap casing-dashes casing-dashes-background-color casing-dashes-background-opacity
    <Rule>
        <Filter>[style-element] = 'casing' and '{casing-color} {final-casing-width} {casing-offset} {casing-opacity} {casing-linejoin} {casing-linecap} {casing-dashes} {casing-dashes-background-color} {casing-dashes-background-opacity}' = [casing-color final-casing-width casing-offset casing-opacity casing-linejoin casing-linecap casing-dashes casing-dashes-background-color casing-dashes-background-opacity]</Filter>
      <LineSymbolizer stroke="{casing-dashes-background-color}" stroke-width="{final-casing-width}" offset="{casing-offset}" stroke-opacity="{casing-dashes-background-opacity}" stroke-linejoin="{casing-linejoin}" stroke-linecap="{casing-linecap}" />
      <LineSymbolizer stroke="{casing-color}" stroke-width="{final-casing-width}" offset="{casing-offset}" stroke-opacity="{casing-opacity}" stroke-linejoin="{casing-linejoin}" stroke-linecap="{casing-linecap}" />
    </Rule>
# END

<!-- LINES -->
# FOR color width offset opacity linejoin linecap dashes dashes-background-color dashes-background-opacity
    <Rule>
        <Filter>[style-element] = 'line' and '{color} {width} {offset} {opacity} {linejoin} {linecap} {dashes} {dashes-background-color} {dashes-background-opacity}' = [color width offset opacity linejoin linecap dashes dashes-background-color dashes-background-opacity]</Filter>
      <LineSymbolizer stroke="{dashes-background-color}" stroke-width="{width}" offset="{offset}" stroke-opacity="{dashes-background-opacity}" stroke-linejoin="{linejoin}" stroke-linecap="{linecap}" />
      <LineSymbolizer stroke="{color}" stroke-width="{width}" offset="{offset}" stroke-opacity="{opacity}" stroke-linejoin="{linejoin}" stroke-linecap="{linecap}" stroke-dasharray="{dashes}" />
    </Rule>
# END

<!-- LINE PATTERN -->
    <Rule>
      <Filter>[style-element] = 'line' and [image]</Filter>
      <LinePatternSymbolizer file="[image]" />
    </Rule>

<!-- POINTS -->
# FOR symbol-rotation
    <Rule>
      <Filter>[style-element] = 'point' and [final-symbol-image] and '{symbol-rotation}' = [symbol-rotation]</Filter>
      <PointSymbolizer file="[final-symbol-image]" transform="rotate({symbol-rotation})" />
    </Rule>
# END

# FOR icon-opacity icon-rotation
    <Rule>
      <Filter>[style-element] = 'point' and [final-icon-image] and '{icon-opacity} {icon-rotation}' = [icon-opacity icon-rotation]</Filter>
      <PointSymbolizer file="[final-icon-image]" opacity="{icon-opacity}" transform="rotate({icon-rotation})" />
    </Rule>
# END

<!-- TEXTS on Points -->
# FOR font-family font-weight font-style text-color text-halo-color text-offset max-width text-anchor-horizontal
    <Rule>
        <Filter>[text] and [style-element] = 'point-text' and [text-position] = 'center' and '{font-family} {font-weight} {font-style} {text-color} {text-halo-color} {text-offset} {max-width} {text-anchor-horizontal}' = [font-family font-weight font-style text-color text-halo-color text-offset max-width text-anchor-horizontal]</Filter>
      <TextSymbolizer placement="interior" fontset-name="{font-family} - {font-weight} - {font-style}" fill="{text-color}" halo-fill="{text-halo-color}" dy="{text-offset}" wrap-width="{max-width}" avoid-edges="false" horizontal-alignment="{text-anchor-horizontal}"><ExpressionFormat size="[font-size]" halo-radius="[text-halo-radius]" character-spacing="[character-spacing]" opacity="[text-opacity]" wrap-character="[wrap-character]">[text]</ExpressionFormat></TextSymbolizer>
    </Rule>
# END

<!-- TEXTS on Lines -->
# FOR font-family font-weight font-style text-color text-halo-color text-offset max-width text-spacing
    <Rule>
        <Filter>[text] and [style-element] = 'line-text' and [text-position] = 'line' and '{font-family} {font-weight} {font-style} {text-color} {text-halo-color} {text-offset} {max-width} {text-spacing}' = [font-family font-weight font-style text-color text-halo-color text-offset max-width text-spacing]</Filter>
      <TextSymbolizer placement="line" fontset-name="{font-family} - {font-weight} - {font-style}" fill="{text-color}" halo-fill="{text-halo-color}" dy="{text-offset}" wrap-width="{max-width}" spacing="{text-spacing}"><ExpressionFormat size="[font-size]" halo-radius="[text-halo-radius]" character-spacing="[character-spacing]" opacity="[text-opacity]" wrap-character="[wrap-character]">[text]</ExpressionFormat></TextSymbolizer>
    </Rule>
# END

  <!-- SHIELDS -->
# FOR shield-font-family shield-font-weight shield-font-style shield-font-size shield-text-color shield-text-halo-color shield-spacing shield-opacity shield-placement shield-text-halo-radius
    <Rule>
        <Filter>[shield-text] and [style-element] = 'shield' and '{shield-font-family} {shield-font-weight} {shield-font-style} {shield-font-size} {shield-text-color} {shield-text-halo-color} {shield-spacing} {shield-opacity} {shield-placement} {shield-text-halo-radius}' = [shield-font-family shield-font-weight shield-font-style shield-font-size shield-text-color shield-text-halo-color shield-spacing shield-opacity shield-placement shield-text-halo-radius]</Filter>
      <ShieldSymbolizer placement="{shield-placement}" fontset-name="{shield-font-family} - {shield-font-weight} - {shield-font-style}" fill="{shield-text-color}" halo-fill="{shield-text-halo-color}" spacing="{shield-spacing}" size="{shield-font-size}" halo-radius="{shield-text-halo-radius}" opacity="{shield-opacity}" file="[shield-image]">[shield-text]</ShieldSymbolizer>
    </Rule>
# END
</Style>

  <Layer name="layer" status="on" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <Datasource>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="dbname">{database}</Parameter>
      <Parameter name="user">{user}</Parameter>
      <Parameter name="password">{password}</Parameter>
      <Parameter name="host">{host}</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="geometry_field">_geo</Parameter>
      <Parameter name="srid">900913</Parameter>
      <Parameter name="cache-features">on</Parameter>
      <Parameter name="table">
(select
  {columns},
  "style-element",
  geo as _geo
from pgmapcss_{style_id}(!bbox!, !scale_denominator!, Array['fill', 'casing', 'line', 'point', 'point-text', 'line-text', 'shield'])) t
      </Parameter>
    </Datasource>
    <StyleName>pgmapcss</StyleName>
  </Layer>
</Map>
