<?xml version="1.0"?>
<!DOCTYPE Map>
<Map srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
  <Style name="pgmapcss">
<!-- POLYGONS -->
    <Rule>
      <Filter>[fill-color]</Filter>
      <PolygonSymbolizer fill="#707070" />

<!--
* Mapnik version >= 3: replace by

      <PolygonSymbolizer fill="[fill-color]" fill-opacity="[fill-opacity]" />

-->
    </Rule>

<!-- LINES -->
    <Rule>
      <Filter>[width] and [color]</Filter>
      <LineSymbolizer stroke="#000000" stroke-width="1" />
<!--
* Mapnik branch stroke-width-expr: replace by

      <LineSymbolizer stroke="#000000" stroke-width="[width]" />

* Mapnik version >= 3: replace by

      <LineSymbolizer stroke="[color]" stroke-width="[width]" stroke-opacity="[opacity]" stroke-linejoin="[linejoin]" stroke-linecap="[linecap]" stroke-dasharray="[dashes]" />
-->
    </Rule>

<!-- TEXTS -->
    <Rule>
      <Filter>[text]</Filter>
      <TextSymbolizer face-name="DejaVu Sans Book"><ExpressionFormat size="[font-size]" halo-radius="[text-halo-radius]" character-spacing="[character-spacing]" opacity="[text-opacity]" wrap-character="[wrap-character]">[text]</ExpressionFormat></TextSymbolizer>
    </Rule>
  </Style>

  <Layer name="layer" status="on" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <Datasource>
      <Parameter name="type">postgis</Parameter>
      <Parameter name="dbname">DB</Parameter>
      <Parameter name="user">USER</Parameter>
      <Parameter name="password">PASSWORD</Parameter>
      <Parameter name="host">localhost</Parameter>
      <Parameter name="estimate_extent">false</Parameter>
      <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
      <Parameter name="geometry_field">_geo</Parameter>
      <Parameter name="srid">900913</Parameter>
      <Parameter name="table">
(select (result).* from
  (select
    test_check(
      object,
      pgmapcss_render_context(!bbox!, !scale_denominator!)
    ) result
  from
  (select pgmapcss_object(cast(osm_id as text), tags, way, Array['point', 'node']) as object from planet_osm_point where way &amp;&amp; !bbox!
  union
    select pgmapcss_object(cast(osm_id as text), tags, way, Array['line', (CASE WHEN osm_id&lt;0 THEN 'relation' ELSE 'way' END)]) as object from planet_osm_line where way &amp;&amp; !bbox!
  union
    select pgmapcss_object(cast(osm_id as text), tags, way, Array['area', (CASE WHEN osm_id&lt;0 THEN 'relation' ELSE 'way' END)]) as object from planet_osm_polygon where way &amp;&amp; !bbox!
  ) t offset 0) t
  order by coalesce(cast((result)."z-index" as float), 0) asc
) t

      </Parameter>
    </Datasource>
    <StyleName>pgmapcss</StyleName>
  </Layer>
</Map>
