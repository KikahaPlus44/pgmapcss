meta {
  title: "TEST";
}
canvas {
  fill-color: #7f7f7f;
  fill-image: url("background.png");
}
point[place] {
  text-halo-radius: 2;
  text: name;
  text-halo-fill: #ffffff;	// Mapnik >= version 3.0 or branch harfbuzz

  character-spacing: 1;
  text-opacity: 0.7;

  z-index: 10;
  text-transform: uppercase;
}

area[building] {
  fill-color: #707070;		// Mapnik >= version 3.0
  width: 1;			// Mapnik >= version 3.0 or branch stroke-width-expr
  color: #000000;		// Mapnik >= version 3.0
}

way|z11-::casing
{
  z-index: -20;
  object-z-index: -1;
}
way|z11-14[highway=primary]
{
  width: 2;
  color: #ff0000;
}
way|z11-14[highway=primary]::casing
{
  width: 4;
  color: rgb(0.5, 127, 50%);
}

way|z15-[highway=primary]
{
  width: 4;
  color: #ff0000;
}
way|z15-[highway=primary]::casing
{
  width: 7;
  color: rgb(0.5, 127, 50%);
}
way|z11-[bridge]::casing
{
  color: #000000;
}

way[highway=residential],
way[highway=unclassified] {
  set .minor_road;
}
way.minor_road {
  width: 2;
  color: #ff0000;
  z-index: -1;
}

relation[route=tram] > line|z15-[railway] {
  set ref_list = eval(push(tag(ref_list), parent_tag(ref)));
}
line[railway] {
  text: eval(join(natsort(unique(tag(ref_list))), ", "));
  width: 2;
  color: #000000;
  text-color: #ff0000;
  text-position: line;
  text-halo-color: #000000;
  text-halo-radius: 1;
}

line[highway] {
  shield-text: ref;
  shield-image: url('examples/highest_peaks_large.svg');
}
/* test */

// very slow with 32bit osm2pgsql
//way[highway=primary] >[sequence_id] node[crossing] {
//    text: eval(link_tag(sequence_id));
//    text-color: #ffffff;
//}
line[highway=secondary] near[distance<=50m] area[building] {
    fill-color: #a07f7f;
}
