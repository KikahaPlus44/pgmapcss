/* DEFAULT VALUES (and make sure that result columns are available) */
*::(default) {
// General
  z-index: 0;
// PolygonSymbolizer
  fill-color: ;
  fill-opacity: 1;
// LineSymbolizer
  width: ;
  color: ;
  opacity: 1;
  linejoin: miter;
  linecap: butt;
  dashes: none;
// TextSymbolizer
  font-family: "DejaVu Sans Book";
  font-size: 12;
  text-color: #000000;
  text-halo-color: #ffffff;
  text-opacity: 1;
  text-halo-radius: 0;
  text-offset: 0;
  max-width: 0;
  // not in MapCSS 0.2 standard:
  character-spacing: 0;
  wrap-character: " ";
}

point[place] {
  text: eval(concat('== ', tag(name), ' =='));
  text-halo-radius: 2;
  text-halo-fill: #ffffff;	// Mapnik >= version 3.0 or branch harfbuzz

  character-spacing: 1;
  text-opacity: 0.7;

  z-index: 10;
}
point[place]::buffer {
  geo: eval(buffer(prop(geo), 100m));
  fill-color: #00ff00;
  z-index: -2;
}


area[building] {
  fill-color: #707070;		// Mapnik >= version 3.0
  width: 1;			// Mapnik >= version 3.0 or branch stroke-width-expr
  color: #000000;		// Mapnik >= version 3.0
}

way|z11-::casing
{
  z-index: -20;
  object-z-index: -1;
}
way|z11-14[highway=primary]
{
  width: 2;
  color: #ff0000;
}
way|z11-14[highway=primary]::casing
{
  width: 4;
  color: #A0A0A0;
}

way|z15-[highway=primary]
{
  width: 4;
  color: #ff0000;
}
way|z15-[highway=primary]::casing
{
  width: 7;
  color: #A0A0A0;
}
way|z11-[bridge]::casing
{
  color: #000000;
}

way[highway=residential],
way[highway=unclassified] {
  set .minor_road;
}
way.minor_road {
  width: 2;
  color: #ff0000;
  z-index: -1;
}
